<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"
       default-lazy-init="true">

    <description>Shiro安全配置</description>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
    </bean>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!--  配置自定义Realm，设定核对密码时在加盐后，要用SHA-512算法对用户输入的密码加密1024次用于核对 -->
    <bean id="shiroRealm" class="com.doudoudrive.auth.config.ShiroRealm">
        <property name="credentialsMatcher">
            <bean class="com.doudoudrive.auth.config.RetryLimitHashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA-512"/>
                <property name="hashIterations" value="1024"/>
            </bean>
        </property>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/login"/>
        <!-- 自定义的filter过滤器 -->
        <property name="filters">
            <map>
                <entry key="oauth">
                    <bean class="com.doudoudrive.auth.config.ShiroAuthenticationFilter"/>
                </entry>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!--
                anon  不需要认证
                authc 需要认证
                user  验证通过或RememberMe登录的都可以
                rest  用于rest无状态服务
                -->
                <!-- 退出登陆 -->
                /oauth/logout = logout

                <!-- 密码登录的API -->
                /oauth/login = anon

                /favicon.ico = anon

                /sms/** = anon

                /** = oauth
            </value>
        </property>
    </bean>

    <!-- Redis缓存配置 [start] -->
    <bean id="ehCacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"/>
        <!-- 10个小时的缓存 -->
        <property name="expire" value="36000"/>
    </bean>
    <!-- Redis缓存配置 [end] -->

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 使用重写后的会话管理器 -->
    <bean id="sessionManager" class="com.doudoudrive.auth.config.CustomerWebSessionManager">
        <property name="globalSessionTimeout" value="36000000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
    </bean>
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="36000000"/>
    </bean>
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="session"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <property name="name" value="token"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- shiro redisManager -->
    <bean id="redisManager" class="org.crazycake.shiro.RedisClusterManager">
        <property name="host" value="192.168.31.192:7011,192.168.31.192:7012,192.168.31.192:7013"/>
        <property name="database" value="0"/>
        <property name="timeout" value="60000"/>
        <property name="password" value="redispassxfkkslgoecjvkdlspdgje"/>
        <property name="jedisPoolConfig" ref="jedisPoolConfig"/>
    </bean>
    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="10"/>
        <property name="maxTotal" value="100"/>
        <property name="maxWait" value="60000"/>
    </bean>

</beans>